#include <msp430.h>
#include "msp430f5529.h"
#include "HAL_Dogs102x6.h"
#include <stdint.h>
#include "HAL_Board.h"


//#include "UART_Event.h"
//#include "uart.h"

unsigned char n=0;  //n为节拍常数变量
int timeline=29999;
char timemaibo[]= "000";
unsigned char str1[]="Lighten\n";
unsigned char str2[]="extinguish\n";
int checkpulse=9;
volatile char Size=5;

unsigned char stron='l';
unsigned char stroff='m';

int maibo=0;
////////////////////////////////////////////////////////////////////////
int transform(int num)
{

	int length=0;
	unsigned char ascii;

	if(num<10){
		length=1;
	}
	else if(num>=10&&num<100){
		length=2;
	}
	else{
		length=3;
	}

	switch(length){
	case 1: num=num;
	case 2: num=num/10;
	}

	switch(num){
	case 0: ascii=0x30;
	case 1: ascii=0x31;
	case 2: ascii=0x32;
	case 3: ascii=0x33;
	case 4: ascii=0x34;
	case 5: ascii=0x35;
	case 6: ascii=0x36;
	case 7: ascii=0x37;
	case 8: ascii=0x38;
	case 9: ascii=0x39;
	default: ascii=0x30;
	}

	return ascii;
}
///////////////////////////////////////////////////////////////////////////////////////////
void UartTX_Send(unsigned char Data[],char Size)
{
	int j;
	for(j=0;j<Size;j++)
	{
		while(!(UCA1IFG&UCTXIFG));
		UCA1TXBUF = Data[j];
		//UCA1TXBUF = Data;
	}
}

void delay (unsigned char m)   //控制频率延时
{
 unsigned i=3*m;
 while(--i);
}

void delaymms(unsigned int a)  //毫秒延时子程序
{
  unsigned int t;
     while(--a)
        for(t=0;t<200;t++);
}

void main(void)
{
  // unsigned char p,m;   //m为频率常数变量
  // unsigned char i=0;
	int flag=0;


   WDTCTL = WDTPW + WDTHOLD;     // 停止看门狗

   Dogs102x6_init();
    Dogs102x6_backlightInit();
    uint8_t brightness=6;
    uint8_t contrast=11;

    Dogs102x6_setBacklight(brightness);          //设置初始背光值
    Dogs102x6_setContrast(contrast);             //设置初始对比度值
    Dogs102x6_clearScreen();                     //清屏


   P1DIR = 0Xff;
   //P2DIR |= BIT1;//P2.1 out
   P1DIR |= BIT0;//led1 out

   P2DIR = 0xf7;//P2.3设为输入。因为要接受外部中断  11110111
   P2IFG = 0x00;//清除P2口的中断标志
   P2IE = BIT3;//P2.3开启中断
   P2IES = 0xff;//P2为下降沿触发
   P2IN = BIT3;//P2.3输入拉高，因此开关闭合时会拉低产生下降沿（即中断）
   P2REN = 0xff;//作为输入的时候一定要配置上拉电阻

   P3DIR = 0xfe;//P3.0 in
   //P4DIR |= BIT4;//P4.4 out
  // P7DIR = 0xfd;//P7.1 in, 11111101

   P4SEL |= BIT4+BIT5;//P4.4=TXD,P4.5=RXD


   UCA1CTL1 |= UCSWRST;
   UCA1CTL1 |= UCSSEL_2;//SMCLK
   UCA1BR0=6;//9600
   UCA1BR1=0;
   UCA1MCTL |= UCBRS_0+UCBRF_13+UCOS16;
   UCA1CTL1 &= ~UCSWRST;
   UCA1IE |= UCRXIE;

   RTCCTL01 = RTCMODE + RTCBCD + RTCHOLD + RTCTEV_1;//日历模式 BCD码格式 实时时钟停止 时钟变换（调整小时）
   RTCCTL01 &= ~RTCHOLD;//日历正在运作
   RTCCTL0 |= RTCRDYIE + RTCTEVIE;//RTC Ready中断使能 RTC时间事件中断 使能


   TA0CCTL0 |= CCIE;                             // CCR0 interrupt enabled
   TA0CCR0 = 99;                         //1/(99+1),used for adjust frequency
   TA0CTL = TASSEL_2 ;                  // SMCLK, contmode
   TA0CTL |= ID_1;	//2 div

   //Dogs102x6_stringDraw(4, 0, "Wait for a moment" , DOGS102x6_DRAW_NORMAL);
   _EINT();//开总中断


   while(1)
      {
	   	   n=0x18;

	   	   /*if(check2==1){
	   		Size=sizeof(str);
	   		UartTX_Send(str,Size);
	   		check2=0;
	   	   }*/

           TA0CTL |= MC_1+TACLR;                                           //开定时器

           //Printf("hello");


           if(P3IN==0){
        	   flag=1;
           }
           delaymms(10000);

           if(P3IN==0&&flag==1){

           while(n!=0){
        	  // P2OUT ^= BIT1,delay(0x2);                        //等待节拍完成
        	   P3OUT ^= BIT1,delay(0x2);                        //等待节拍完成

           }

           }

           flag=0;

           TA0CTL &=~MC_1;                                            //关定时器
    }

}


// Timer A0 interrupt service routine
#pragma vector=TIMER0_A0_VECTOR
__interrupt void Timer_A (void)
{
    n--;


}

// UART interrupt
#pragma vector=USCI_A1_VECTOR
__interrupt void USCI_A1_ISR(void)
{
	//UCA0IE &=~UCRXIE;
	//check2=1;

	if(UCA1RXBUF==stron){
		P1OUT |= BIT0;
		//str[]="light on";
		UartTX_Send(str1,Size);
	}
	if(UCA1RXBUF==stroff){
		P1OUT &= ~BIT0;
		//str=[]"light off";
		UartTX_Send(str2,Size);
	}
	timeline--;
	/*if(timeline==0){
		//Size=sizeof(str);
		//UartTX_Send(str,Size);
		while(!(UCA1IFG&UCTXIFG));
		UCA1TXBUF = timemaibo;
		timeline=29999;
	}*/

	/*if(timemaibo<=0){
		timemaibo=10;
		while(!(UCA1IFG&UCTXIFG));
		UCA1TXBUF = maibo;
		maibo=0;
	}*/

	//while(!(UCA1IFG&UCTXIFG));
			//UCA0TXBUF = Data[j];
	//UCA1TXBUF = 'h';
}

//Port 2 interrupt
#pragma vector=PORT2_VECTOR
__interrupt void Port2_ISR(void)
{
	unsigned int temp;
	int i;
	for(i=0;i<12000;i++);//延时消抖
	if((P2IN&0xff)!=0xff){
		temp=P2IFG;
		P2IFG=0x00;
		if(temp==0x08){
			maibo++;
		}
	}
	//maibo++;
}

//RTC vector
#pragma vector=RTC_VECTOR
__interrupt void RTC_ISR(void)
{
	//timemaibo[0]--;
	checkpulse--;
	if(checkpulse==0){
		maibo=maibo*6;
		timemaibo[0]=maibo/100+48;
		timemaibo[1]=(maibo/10)%10+48;
		timemaibo[2]=maibo%10+48;
		Dogs102x6_stringDraw(5, 80, timemaibo , DOGS102x6_DRAW_NORMAL);
		checkpulse=9;
		maibo=0;
	}

	/*if(timemaibo[0]<0x30){
		timemaibo[0]=0x39;
	}*/
	//Dogs102x6_stringDraw(5, 86, timemaibo , DOGS102x6_DRAW_NORMAL);
	Dogs102x6_stringDraw(2, 0, " device for pulse" , DOGS102x6_DRAW_NORMAL);
	Dogs102x6_stringDraw(5, 0, "frequency:" , DOGS102x6_DRAW_NORMAL);
	RTCCTL01 &=~(RTCRDYIFG + RTCTEVIFG);
}
